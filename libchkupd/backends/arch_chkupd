#!/bin/sh
# arch_chkupd
arch_chkupd() {
     #shellcheck source=/dev/null
     . "$1/run"
     echo "arch_chkupd: checking package $NAME"
     echo "arch_chkupd: connecting to arch repositories"
     UPSTREAM_VER="$(curl -s https://archlinux.org/packages/search/json/?name="$NAME" | jq '.results[0].pkgver' -r | cut -f1 -d"-")"
     if [ "$(version "$VERSION")" -ge "$(version "$UPSTREAM_VER")" ]; then
        echo "arch_chkupd: the package is uptodate compared to arch repositories!"
	echo "arch_chkupd: arch version: $UPSTREAM_VER"
	echo "arch_chkupd: local version: $VERSION"
     else
	echo "arch_chkupd: the package is not uptodate compared to arch repositories!"
	if [ "$LOGS" = "on" ]; then
		echo "arch_chkupd: $NAME upstream ver: $UPSTREAM_VER local: $VERSION" >> out.txt
	fi
	echo "arch_chkupd: arch version: $UPSTREAM_VER"
	echo "arch_chkupd: local version: $VERSION"
	if [ "$UPDATEPKG" = "on" ]; then
		echo "arch_chkupd: updating package $NAME"
		
    echo "arch_chkupd: regenerating checksum"
    cd /tmp || exit 1
   
    SHA256SUM_NEW=""
    echo "$SOURCES" | tr ';' '\n' | while read -r line
    do
      line="$(echo "$line" | sed "s/$VERSION/$UPSTREAM_VER/g")"
      wget "$line" || exit 1
      FILENAME="$(basename "$line")"
      SHA256SUM_NEW="$SHA256SUM_NEW;$(sha256sum "$FILENAME")"
      rm -f "$FILENAME"
      echo "$SHA256SUM_NEW" > /tmp/temp.sha256sum_new
    done || exit 1
    
    sed -i "s/$SHA256SUM/$(cat /tmp/temp.sha256sum_new)/g" "$1/run"
    
    rm -f /tmp/temp.sha256sum_new || exit 1

    echo "arch_chkupd: updating package version"
		sed -i "s/$VERSION/$UPSTREAM_VER/" "$1/run"

    echo "arch_chkupd: please check if the package works or not"
	fi
	export ERR=1
     fi
}
